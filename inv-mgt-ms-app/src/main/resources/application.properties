# Server configuration
server.port=8080
spring.application.name=inventory-service

# H2 Database configuration
spring.datasource.url=jdbc:h2:mem:inventorydb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA/Hibernate configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Initialize schema
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql

# AWS SQS Configuration
aws.region=us-east-1
aws.sqs.endpoint=https://sqs.us-east-1.amazonaws.com
aws.sqs.product.queue-name=guhesanv-products
aws.sqs.widget.queue-name=guhesanv-widgets
aws.access-key=${AWS_ACCESS_KEY_ID}
aws.secret-key=${AWS_SECRET_ACCESS_KEY}

# SQS Polling Configuration
app.sqs.polling.product.fixed-delay=5000
app.sqs.polling.widget.fixed-delay=5000
app.sqs.polling.enabled=true

# OpenAPI/Swagger Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.default-produces-media-type=application/json